CountDownLatch：
它允许一个或多个线程一直等待，直到其他线程的操作执行完毕再执行
其实主要关注两个方法
await和countDown方法
如果计数未到0的时候，调用了await方法的线程会被阻塞，队列在AQS队列中，AQS队列从尾部加入
当计数到0时，则顺序唤醒，AQS队列中的线程
注意计数是一次性的，不能重复使用
Semaphore：可以控制同时访问的线程个数，通过 acquire 获取一个许可，如果没有就等待，通过 release 释放一个许可
初始化时，设置许可
主要关注两个方法
acquire和release
通过acquire获取许可，如果state为0，如果未获取到，则加入AQS队列
通过release释放许可，其实就是将state的值增加，然后唤醒阻塞的线程
类似于限流
/ˈsaɪklɪk; ˈsɪklɪk//ˈbæriə(r)/
CyclicBarrier：可循环使用的屏障，让一组线程到达一个屏障（也可以叫同步点）时被阻塞，直到最后一个线程到达屏障时，屏障才会开门
所有被屏障拦截的线程才会继续工作
构造方法设置屏障拦截的线程数量，每个调用await方法的线程告诉当前CyclicBarrier当前线程已经到达了屏障，然后当前线程被阻塞
当屏障数为0时，则唤醒线程